MORSE_CODE_DICT = { 'A':'.-', 'B':'-...', 

                    'C':'-.-.', 'D':'-..', 'E':'.', 

                    'F':'..-.', 'G':'--.', 'H':'....', 

                    'I':'..', 'J':'.---', 'K':'-.-', 

                    'L':'.-..', 'M':'--', 'N':'-.', 

                    'O':'---', 'P':'.--.', 'Q':'--.-', 

                    'R':'.-.', 'S':'...', 'T':'-', 

                    'U':'..-', 'V':'...-', 'W':'.--', 

                    'X':'-..-', 'Y':'-.--', 'Z':'--..', 

                    '1':'.----', '2':'..---', '3':'...--', 

                    '4':'....-', '5':'.....', '6':'-....', 

                    '7':'--...', '8':'---..', '9':'----.', 

                    '0':'-----', ', ':'--..--', '.':'.-.-.-', 

                    '?':'..--..', '/':'-..-.', '-':'-....-', 

                    '(':'-.--.', ')':'-.--.-'} 

  

def encrypt(message): 

    cipher = '' 

    for letter in message: 

        if letter != ' ': 

 

            cipher += MORSE_CODE_DICT[letter] + ' '

        else:

            cipher += ' '

  

    return cipher 

  
# Function to decrypt the string 
# from morse to english 

def decrypt(message): 

  

    # extra space added at the end to access the 

    # last morse code 

    message += ' '

  

    decipher = '' 

    citext = '' 

    for letter in message: 

  

        # checks for space 

        if (letter != ' '): 

  

            # counter to keep track of space 

            i = 0

  

            # storing morse code of a single character 

            citext += letter 

  

        # in case of space 

        else: 

            # if i = 1 that indicates a new character   

            i += 1

  

            # if i = 2 that indicates a new word 

            if i == 2 : 

  

                 # adding space to separate words 

                decipher += ' '

            else: 

  

                # accessing the keys using their values (reverse of encryption) 

                decipher += list(MORSE_CODE_DICT.keys())[list(MORSE_CODE_DICT 

                .values()).index(citext)] 

                citext = '' 

  

    return decipher 

  
# Hard-coded driver function to run the program 

def restart():
    op=input("For encryption press E and for decryption press D:")
    
    if op == "E" or op == "e":
        
        print("")
        
        print("  ** Encryption mode **  ")
        
        message = input("Enter the string:  ")

        result = encrypt(message.upper()) 

        print (result) 
    

  
     
    elif op == "D" or op == "d":
        
        print("")
        
        print("  ** Decryption mode **  ")
        
        message = input("Enter the code:  ")

        result = decrypt(message.upper()) 

        print (result)
       
       
    else:
        
        print("")
        
        print("Wrong Choice")
    
       
    while True:
        
        answer =input('                   ** Run again? (y/n): ')
        
        if answer in ('y', 'n'):
            break
        
        print(" ")
        print('                             Invalid input.')
        print(" ")
        
    if answer == 'y':
        print(" ")
        print("                 --------- * --------- * ---------")
        print(" ")
        restart()
        
    else:
        print(" ")
        print('                            **Goodbye**')   
        print(" ")
        an=input("                    Press ENTER to exit.")
        print(an)
        exit()
    

def main():
    
    op=input("For encryption press E and for decryption press D:")
    
    if op == "E" or op == "e":
        
        print("")
        
        print("  ** Encryption mode **  ")
        
        message = input("Enter the string:  ")

        result = encrypt(message.upper()) 

        print (result) 

  
     
    elif op == "D" or op == "d":
        
        print("")
       
        print("  ** Decryption mode **  ")

            
        message = input("Enter the code:  ")
        
        result = decrypt(message.upper()) 

        print (result)

       
       
    else:
        
        print("")
        
        print("Wrong Choice")
    
       
    while True:
        
        answer =input('                   ** Run again? (y/n): ')
        
        if answer in ('y', 'n'):
            break
        
        print(" ")
        print('                             Invalid input.')
        print(" ")
        
    if answer == 'y':
        print(" ")
        print("                 --------- * --------- * ---------")
        print(" ")
        restart()
        
    else:
        print(" ")
        print('                            **Goodbye**')   
        print(" ")
        an=input("                    Press ENTER to exit.")
        print(an)
        exit()
       
    

  
# Executes the main function 

if __name__ == '__main__': 

    main()
